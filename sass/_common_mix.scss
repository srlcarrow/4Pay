@mixin f-left {
  float: left;
  width: 100%;
  min-height: 1px;
}

//Margin
@mixin margin {
  $class-margin: m !default;
  $class-margin-cag: ('t', 'b', 'r', 'l');
  $margin-map: (
          't':'top',
          'b':'bottom',
          'l':'left',
          'r':'right'
  );

  @for $i from 0 through 100 {
    @each $ctg in $class-margin-cag {
      .m#{$ctg}-#{$i} {
        margin-#{map-get($margin-map, $ctg)}: 0px + $i !important;
      }
    }
  }
}

//Padding
@mixin padding {
  $class-margin-cag: ('t', 'b', 'r', 'l');
  $margin-map: (
          't':'top',
          'b':'bottom',
          'l':'left',
          'r':'right'
  );

  @for $i from 0 through 100 {
    @each $ctg in $class-margin-cag {
      .p#{$ctg}-#{$i} {
        padding-#{map-get($margin-map, $ctg)}: 0px + $i !important;
      }
    }
  }
}

//Text color class
@mixin text-color($color,$className) {
  $opacity: (100, 86, 56, 30);

  &.text-#{$className} {
    color: $color;
  }

  &.hover:hover {
    color: rgba($color, 0.56);
  }

  &.text-#{$className} {
    @for $i from 1 through length($opacity) {

      $opt: nth($opacity,$i) /100;

      &.lighten-#{$i} {
        color: rgba($color, $opt);
      }
    }

  }
}

@mixin textWithoutHover($color,$colorClass) {

  .text-#{$colorClass} {
    color: $color;

    &.lighten-1 {
      color: rgba($color, 0.86);
    }
    &.lighten-2 {
      color: rgba($color, 0.56);
    }
    &.lighten-3 {
      color: rgba($color, 0.30);
    }
  }
}